name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # Tests the latest LTS version and the latest version
        node-version: [16.x, 18.x]

    steps:
    - name: Pull latest
      uses: actions/checkout@v2

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm ci

    - name: Build library
      run: npm run build

  unit-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # Tests the latest LTS version and the latest version
        node-version: [16.x, 18.x]

    steps:
    - name: Pull latest
      uses: actions/checkout@v2

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm ci

    - name: Run unit tests
      run: npm run test

  format:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # Tests the latest LTS version and the latest version
        node-version: [16.x, 18.x]

    steps:
    - name: Pull latest
      uses: actions/checkout@v2

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm ci

    - name: Check formatting
      run: npm run format:check

  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # Tests the latest LTS version and the latest version
        node-version: [16.x, 18.x]

    steps:
    - name: Pull latest
      uses: actions/checkout@v2

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm ci

    - name: Lint code
      run: npm run lint:check